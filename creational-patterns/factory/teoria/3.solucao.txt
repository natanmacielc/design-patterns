O padrão Factory Method sugere que você substitua chamadas diretas de construção de objetos (usando o operador new) 
por chamadas para um método fábrica especial. Não se preocupe: os objetos ainda são criados através do operador new, 
mas esse está sendo chamado de dentro do método fábrica. Objetos retornados por um método fábrica geralmente são 
chamados de produtos.

As subclasses podem alterar a classe de objetos retornados pelo método fábrica.

À primeira vista, essa mudança pode parecer sem sentido: apenas mudamos a chamada do construtor de uma parte do programa 
para outra. No entanto, considere o seguinte: agora você pode sobrescrever o método fábrica em uma subclasse e alterar a 
classe de produtos que estão sendo criados pelo método.

Porém, há uma pequena limitação: as subclasses só podem retornar tipos diferentes de produtos se esses produtos tiverem 
uma classe ou interface base em comum. Além disso, o método fábrica na classe base deve ter seu tipo de retorno declarado 
como essa interface.

Todos os produtos devem seguir a mesma interface.

Por exemplo, ambas as classes Caminhão e Navio devem implementar a interface Transporte, que declara um método chamado entregar. 
Cada classe implementa esse método de maneira diferente: caminhões entregam carga por terra, navios entregam carga por mar. 
O método fábrica na classe LogísticaViária retorna objetos de caminhão, enquanto o método fábrica na classe LogísticaMarítima 
retorna navios.

Desde que todas as classes de produtos implementem uma interface comum, você pode passar seus objetos para o código cliente sem quebrá-lo.

O código que usa o método fábrica (geralmente chamado de código cliente) não vê diferença entre os produtos reais retornados 
por várias subclasses. O cliente trata todos os produtos como um Transporte abstrato. O cliente sabe que todos os objetos de 
transporte devem ter o método entregar, mas como exatamente ele funciona não é importante para o cliente.